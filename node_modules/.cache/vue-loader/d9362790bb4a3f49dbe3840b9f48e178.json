{"remainingRequest":"D:\\softwares\\nvm\\v10.16.0\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myCode\\tree-components\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myCode\\tree-components\\App.vue","mtime":1568946090986},{"path":"D:\\softwares\\nvm\\v10.16.0\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\softwares\\nvm\\v10.16.0\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\softwares\\nvm\\v10.16.0\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\r\nimport { getTreeList } from './api'\r\nexport default {\r\n  async mounted () {\r\n    let { data } = await getTreeList();\r\n    // console.log(data); //请求到接口数据\r\n    //1)扁平数据如何变成多层数据，递归数据\r\n    let AllData = [...data.parent, ...data.child]\r\n    // console.log(AllData)   //变成数组\r\n    //2)变成映射表  {id:1,{name:\"文件夹1\"，pid:0,id:1}}\r\n    let treeMapList = AllData.reduce((memo, current) => {\r\n      // current.label = current.name;\r\n      memo[current[\"id\"]] = current;\r\n      return memo;\r\n    }, {})\r\n    console.log(treeMapList);\r\n    // 3)讲父子文件夹拼接成二维数组\r\n    let result = AllData.reduce((arr, current) => {\r\n      let pid = current.pid;\r\n      let parent = treeMapList[pid];\r\n      if (parent) {\r\n        parent.children ? parent.children.push(current) : parent.children = [current]\r\n      } else if (pid === 0) {  //这是文件夹\r\n        arr.push(current)\r\n      }\r\n      return arr;\r\n    }, [])\r\n    console.log(result)\r\n  }\r\n\r\n}\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\r\n  <div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getTreeList } from './api'\r\nexport default {\r\n  async mounted () {\r\n    let { data } = await getTreeList();\r\n    // console.log(data); //请求到接口数据\r\n    //1)扁平数据如何变成多层数据，递归数据\r\n    let AllData = [...data.parent, ...data.child]\r\n    // console.log(AllData)   //变成数组\r\n    //2)变成映射表  {id:1,{name:\"文件夹1\"，pid:0,id:1}}\r\n    let treeMapList = AllData.reduce((memo, current) => {\r\n      // current.label = current.name;\r\n      memo[current[\"id\"]] = current;\r\n      return memo;\r\n    }, {})\r\n    console.log(treeMapList);\r\n    // 3)讲父子文件夹拼接成二维数组\r\n    let result = AllData.reduce((arr, current) => {\r\n      let pid = current.pid;\r\n      let parent = treeMapList[pid];\r\n      if (parent) {\r\n        parent.children ? parent.children.push(current) : parent.children = [current]\r\n      } else if (pid === 0) {  //这是文件夹\r\n        arr.push(current)\r\n      }\r\n      return arr;\r\n    }, [])\r\n    console.log(result)\r\n  }\r\n\r\n}\r\n</script>"]}]}